{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,QAASC,SAASC,cAAc,SAChCC,mBAAoBF,SAASC,cAAc,uBAC3CE,aAAcH,SAASC,cAAc,sBACrCG,eAAgBJ,SAASC,cAAc,yBAGzC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IA2BPT,EAAKC,QAAQe,iBAAiB,UAvB9B,SAAsBC,GACpBA,EAAIC,iBAMJ,IAJA,IAAIC,EAAaC,OAAOpB,EAAKI,mBAAmBiB,OAC5CC,EAAOF,OAAOpB,EAAKK,aAAagB,OAChCE,EAASH,OAAOpB,EAAKM,eAAee,OAE/BG,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAC/BjB,EAAciB,EAAI,EAAGA,EAAIF,EAAOH,GAC7BM,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MACjBkB,EAAA7B,GAAS8B,OAAOC,QACd,uBAAwCC,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAGjDsB,OAAM,SAAAL,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MAClBkB,EAAA7B,GAAS8B,OAAOI,QACd,sBAAqCF,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAInDQ,EAAIgB,OAAOC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  formRef: document.querySelector('.form'),\n  firstDelayInputRef: document.querySelector('input[name=\"delay\"]'),\n  stepInputRef: document.querySelector('input[name=\"step\"]'),\n  amountInputRef: document.querySelector('input[name=\"amount\"]'),\n};\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n\n  let firstDelay = Number(refs.firstDelayInputRef.value);\n  let step = Number(refs.stepInputRef.value);\n  let amount = Number(refs.amountInputRef.value);\n\n  for (let i = 0; i < amount; i += 1) {\n    createPromise(i + 1, i * step + firstDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n  evt.target.reset();\n}\n\nrefs.formRef.addEventListener('submit', onFormSubmit);\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","formRef","document","querySelector","firstDelayInputRef","stepInputRef","amountInputRef","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","evt","preventDefault","firstDelay","Number","value","step","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","target","reset"],"version":3,"file":"03-promises.8d2483e1.js.map"}